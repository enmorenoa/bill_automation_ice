//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.8
//
// <auto-generated>
//
// Generated from file `echaCuentasV2.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package InvoiceAccounts;

public class Product implements java.lang.Cloneable,
                                java.io.Serializable
{
    public String name;

    public double price;

    public Product()
    {
        this.name = "";
    }

    public Product(String name, double price)
    {
        this.name = name;
        this.price = price;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        Product r = null;
        if(rhs instanceof Product)
        {
            r = (Product)rhs;
        }

        if(r != null)
        {
            if(this.name != r.name)
            {
                if(this.name == null || r.name == null || !this.name.equals(r.name))
                {
                    return false;
                }
            }
            if(this.price != r.price)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int h_ = 5381;
        h_ = IceInternal.HashUtil.hashAdd(h_, "::InvoiceAccounts::Product");
        h_ = IceInternal.HashUtil.hashAdd(h_, name);
        h_ = IceInternal.HashUtil.hashAdd(h_, price);
        return h_;
    }

    public Product
    clone()
    {
        Product c = null;
        try
        {
            c = (Product)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    ice_writeMembers(Ice.OutputStream ostr)
    {
        ostr.writeString(this.name);
        ostr.writeDouble(this.price);
    }

    public void
    ice_readMembers(Ice.InputStream istr)
    {
        this.name = istr.readString();
        this.price = istr.readDouble();
    }

    static public void
    ice_write(Ice.OutputStream ostr, Product v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public Product
    ice_read(Ice.InputStream istr)
    {
        Product v = new Product();
        v.ice_readMembers(istr);
        return v;
    }

    private static final Product _nullMarshalValue = new Product();

    public static final long serialVersionUID = 2757944600842549833L;
}
